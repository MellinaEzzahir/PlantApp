{"version":3,"file":"static/js/main.a723a96a.js","mappings":"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","sources":["lib/app-write.js","auth-context.js","styles/theme.js","styles/global-stylesheet.js","screens/dashboard.js","components/plant-card.js","screens/my-plants.js","screens/settings.js","screens/calendar.js","login/login-screen.js","login/sign-up-screen.js","components/custom-header.js","App.js","index.js","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import { Client, Account, ID, Databases } from 'appwrite';\n\nconst client = new Client()\n    .setEndpoint('https://fra.cloud.appwrite.io/v1')\n    .setProject('plantapp')\n\nconst database = new Databases(client);\nconst account = new Account(client)\nexport { ID, client, database, account };","import React, { createContext, useState, useEffect } from 'react'\nimport { account } from './lib/app-write'\n\nexport const AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n    const [isLoggedIn, setIsLoggedIn] = useState(null);\n\n    useEffect(() => {\n        const checkLoggedIn = async () => {\n            try {\n                const user = await account.get();\n                setIsLoggedIn(true)\n            } catch (error) {\n                console.log('User is not logged in:' + error)\n                setIsLoggedIn(false);\n            }\n        }\n        checkLoggedIn();\n    }, []);\n\n    return (\n        <AuthContext.Provider value={{ isLoggedIn, setIsLoggedIn }}>\n            {children}\n        </AuthContext.Provider>\n    );\n}","const lightTheme = {\n    colors: {\n        primary: '#8DB580',\n        secondary: '#4C5C3A',\n        background: '#F6F4EF',\n        accent: '#E57373',\n        copperBrown: '#B87333',\n        dustyRose: '#C48793',\n        yellow: '#FCE38A',\n        text: '#333333',\n        error: 'rgb(190, 75, 64)',\n    }\n}\n\nconst darkTheme = {\n    colors: {\n        primary: '#8DB580',\n        secondary: '#4C5C3A',\n        background: '#F6F4EF',\n        accent: '#E57373',\n        copperBrown: '#B87333',\n        dustyRose: '#C48793',\n        yellow: '#FCE38A',\n        text: 'rgb(51, 51, 51)',\n        error: 'rgb(190, 75, 64)',\n    }\n}\n\nconst theme = lightTheme;\n\nexport default theme;","import { StyleSheet, Dimensions } from 'react-native';\nimport theme from './theme';\n\nconst screenWidth = Dimensions.get('window').width;\nconst isPhoneSize = screenWidth < 600;\n\nexport default StyleSheet.create({\n    screenContainer: {\n        flex: 1,\n        margin: 40,\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: theme.colors.background,\n    },\n\n    tabBarStyle: {\n        backgroundColor: '#fff',\n        height: 60,\n        borderTopWidth: 2,\n        borderTopColor: 'lightgray',\n    },\n\n    customHeader: {\n        height: 70,\n        paddingTop: 25,\n        paddingHorizontal: 15,\n        backgroundColor: theme.colors.secondary,\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        fontSize: 26,\n    },\n\n    customHeaderTitle: {\n        fontSize: 24,\n        color: 'white',\n        fontWeight: 'bold',\n    },\n\n    myPlants: {\n        width: '100%',\n    },\n\n    plantCard: {\n        width: '95%',\n        marginBottom: 12,\n        marginLeft: 10,\n        backgroundColor: theme.colors.primary,\n        borderRadius: 16,\n        padding: 16,\n        shadowColor: '#000',\n        shadowOffset: { width: 0, height: 2 },\n        shadowOpacity: 0.1,\n        shadowRadius: 4,\n        elevation: 2,\n    },\n\n    plantCardName: {\n        fontSize: 18,\n        color: 'white',\n        fontWeight: 'bold',\n    },\n\n    plantCardType: {\n        fontSize: 14,\n        marginBottom: 4,\n    },\n\n    plantCardWatering: {},\n    plantCardSunlight: {},\n    plantCardNotes: {},\n\n    loginTitle: {\n        fontSize: 26,\n        fontWeight: 'bold',\n        marginBottom: 24,\n        color: theme.colors.secondary,\n        textAlign: 'center',\n    },\n\n    loginUsername: {\n        width: isPhoneSize ? '100%' : 500,\n        padding: 14,\n        marginBottom: 16,\n        borderRadius: 16,\n        borderWidth: 1.5,\n        borderColor: theme.colors.primary,\n        backgroundColor: '#fff',\n        fontSize: 16,\n        color: theme.colors.text,\n        shadowColor: '#000',\n        shadowOffset: { width: 0, height: 1 },\n        shadowOpacity: 0.05,\n        shadowRadius: 2,\n        elevation: 1,\n    },\n\n    loginPassword: {\n        width: isPhoneSize ? '100%' : 500,\n        padding: 14,\n        marginBottom: 24,\n        borderRadius: 16,\n        borderWidth: 1.5,\n        borderColor: theme.colors.primary,\n        backgroundColor: '#fff',\n        fontSize: 16,\n        color: theme.colors.text,\n        shadowColor: '#000',\n        shadowOffset: { width: 0, height: 1 },\n        shadowOpacity: 0.05,\n        shadowRadius: 2,\n        elevation: 1,\n    },\n\n    loginSubmit: {\n        backgroundColor: theme.colors.secondary,\n        paddingVertical: 14,\n        paddingHorizontal: 32,\n        borderRadius: 16,\n        shadowColor: theme.colors.copperBrown,\n        shadowOffset: { width: 0, height: 3 },\n        shadowOpacity: 0.2,\n        shadowRadius: 4,\n        elevation: 4,\n        marginBottom: 16,\n    },\n\n    loginSubmitText: {\n        color: '#fff',\n        fontSize: 16,\n        fontWeight: 'bold',\n        textAlign: 'center',\n    },\n\n    footerText: {\n        marginTop: 12,\n        fontSize: 14,\n        color: theme.colors.secondary,\n        textAlign: 'center',\n    },\n\n    backText: {\n        marginTop: 12,\n        fontSize: 14,\n        color: theme.colors.secondary,\n        textAlign: 'center',\n    },\n\n    backTextPress: {\n        position: 'absolute',\n        top: 10,\n        left: 10,\n    },\n\n    wrongSignUpInfo: {\n        color: '#d9534f',\n        marginBottom: 12,\n        marginLeft: 4,\n        fontSize: 14,\n    },\n});","import StyleSheet from '../styles/global-stylesheet'\nimport * as React from \"react\";\nimport { View, Text, Image, Pressable } from \"react-native\";\n\n// import local components here\n\nexport default function Dashboard({navigation}) {\n  return (\n    <View \n      style={StyleSheet.screenContainer}>\n    </View>\n  );\n}","import StyleSheet from '../styles/global-stylesheet'\nimport { View, Text, Pressable } from \"react-native\";\n\nexport default function PlantCard({ plant, onDelete }) {\n    const sunEmoji = () => {\n        switch (plant.sunlight) {\n            case 1: return \"☀️☁️☁️☁️☁️\";\n            case 2: return \"☀️☀️☁️☁️☁️\";\n            case 3: return \"☀️☀️☀️☁️☁️\";\n            case 4: return \"☀️☀️☀️☀️☁️\";\n            case 5: return \"☀️☀️☀️☀️☀️\";\n            default: return \"idk think theres an error somewhere\";\n        }\n    };\n\n    const wateringText = () => {\n        const wt = plant.wateringFrequency;\n        if (wt % 7 === 0) {\n            return wt === 7 ? \"Water weekly\" : `Water every ${wt / 7} weeks`;\n        } else {\n            return wt === 1 ? \"Water daily\" : `Water every ${wt} days`;\n        }\n    };\n\n    return (\n        <View style={StyleSheet.plantCard}>\n            <Text style={StyleSheet.plantCardName}>{plant.name}</Text>\n            <Text style={StyleSheet.plantCardType}>{plant.type}</Text>\n            <Text style={StyleSheet.plantCardWatering}>{wateringText()}</Text>\n            <Text style={StyleSheet.plantCardSunlight}>{sunEmoji()}</Text>\n            <Text style={StyleSheet.plantCardNotes}>{plant.notes}</Text>\n            <Pressable onPress={() => onDelete(plant.$id)}>\n                <Text>Delete</Text>\n            </Pressable>\n        </View>\n    );\n}","import * as React from \"react\";\nimport { View, Text, TextInput, Button, FlatList, Modal, TouchableOpacity } from \"react-native\";\nimport { database, account } from '../lib/app-write';\nimport { ID, Query } from 'appwrite';\nimport styles from '../styles/global-stylesheet';\nimport PlantCard from \"../components/plant-card\";\n\nexport default function MyPlants() {\n    const [plants, setPlants] = React.useState([]);\n    const [loading, setLoading] = React.useState(true);\n    const [modalVisible, setModalVisible] = React.useState(false);\n\n    React.useEffect(() => {\n        fetchPlants();\n    }, []);\n\n    const fetchPlants = async () => {\n        try {\n            const user = await account.get();\n\n            const response = await database.listDocuments(\n                'database',\n                'plants',\n                [Query.equal('userId', user.$id)]\n            );\n            setPlants(response.documents);\n        } catch (error) {\n            console.error(\"Error fetching plants:\", error);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const [newPlant, setNewPlant] = React.useState({\n        name: '',\n        type: '',\n        wateringFrequency: '',\n        sunlight: '',\n        notes: '',\n    });\n\n    const handleAddPlant = async () => {\n        if (\n            !newPlant.name.trim() ||\n            !newPlant.type.trim() ||\n            isNaN(newPlant.wateringFrequency) ||\n            isNaN(newPlant.sunlight)\n        ) {\n            alert(\"Please fill out all required fields correctly.\");\n            return;\n        }\n\n        try {\n            const user = await account.get();\n\n            const created = await database.createDocument(\n                'database',\n                'plants',\n                ID.unique(),\n                {\n                    name: newPlant.name.trim(),\n                    type: newPlant.type.trim(),\n                    wateringFrequency: parseInt(newPlant.wateringFrequency),\n                    sunlight: parseInt(newPlant.sunlight),\n                    notes: newPlant.notes.trim(),\n                    userId: user.$id,\n                }\n            );\n\n            setPlants(prev => [created, ...prev]);\n            setNewPlant({ name: '', type: '', wateringFrequency: '', sunlight: '', notes: '' });\n            setModalVisible(false);\n        } catch (err) {\n            console.error(\"Failed to create plant\", err);\n        }\n    };\n\n    const handleDeletePlant = async (id) => {\n        try {\n            const result = await database.deleteDocument(\"database\", \"plants\", id)\n            fetchPlants();\n        } catch (err) {\n            console.log(err)\n        }\n    }\n\n    return (\n        <View style={styles.screenContainer}>\n            <Text style={styles.loginTitle}>My Plants</Text>\n\n            {loading ? (\n                <Text>Loading...</Text>\n            ) : (\n                <>\n                    <FlatList\n                        data={plants}\n                        keyExtractor={(plant) => plant.$id}\n                        renderItem={({ item }) =>\n                            <PlantCard\n                                plant={item}\n                                onDelete={handleDeletePlant}\n                            />}\n                        style={styles.myPlants}\n                    />\n\n                    <View style={{ width: '95%', marginBottom: 16 }}>\n                        <Button\n                            title=\"Add a Plant\"\n                            onPress={() => setModalVisible(true)}\n                            color={styles.customHeader.backgroundColor} // keeps the button colour consistent with header\n                        />\n                    </View>\n\n                    <Modal\n                        visible={modalVisible}\n                        animationType=\"slide\"\n                        transparent={true}\n                        onRequestClose={() => setModalVisible(false)}\n                    >\n                        <View style={{\n                            flex: 1,\n                            justifyContent: 'center',\n                            backgroundColor: 'rgba(0,0,0,0.5)',\n                            padding: 20,\n                        }}>\n                            <View style={[styles.plantCard, { backgroundColor: 'white' }]}>\n                                <Text style={{ fontSize: 20, marginBottom: 10, fontWeight: 'bold', color: styles.customHeader.backgroundColor }}>\n                                    Add a Plant\n                                </Text>\n\n                                <TextInput\n                                    placeholder=\"Plant Name *\"\n                                    value={newPlant.name}\n                                    onChangeText={(text) => setNewPlant({ ...newPlant, name: text })}\n                                    style={styles.loginUsername}\n                                />\n                                <TextInput\n                                    placeholder=\"Type (e.g., indoor, outdoor) *\"\n                                    value={newPlant.type}\n                                    onChangeText={(text) => setNewPlant({ ...newPlant, type: text })}\n                                    style={styles.loginUsername}\n                                />\n                                <TextInput\n                                    placeholder=\"Watering Frequency (days) *\"\n                                    value={newPlant.wateringFrequency}\n                                    onChangeText={(text) => setNewPlant({ ...newPlant, wateringFrequency: text })}\n                                    keyboardType=\"numeric\"\n                                    style={styles.loginUsername}\n                                />\n                                <TextInput\n                                    placeholder=\"Sunlight (1-5) *\"\n                                    value={newPlant.sunlight}\n                                    onChangeText={(text) => setNewPlant({ ...newPlant, sunlight: text })}\n                                    keyboardType=\"numeric\"\n                                    style={styles.loginUsername}\n                                />\n                                <TextInput\n                                    placeholder=\"Notes (optional)\"\n                                    value={newPlant.notes}\n                                    onChangeText={(text) => setNewPlant({ ...newPlant, notes: text })}\n                                    style={styles.loginUsername}\n                                />\n\n                                <View style={{ flexDirection: 'row', justifyContent: 'space-between' }}>\n                                    <Button title=\"Cancel\" onPress={() => setModalVisible(false)} color=\"#888\" />\n                                    <Button title=\"Add Plant\" onPress={handleAddPlant} color={styles.customHeader.backgroundColor} />\n                                </View>\n                            </View>\n                        </View>\n                    </Modal>\n                </>\n            )}\n        </View>\n    );\n}","import React, { useState } from 'react';\nimport StyleSheet from '../styles/global-stylesheet'\nimport { View, Text, Image, Pressable, Switch } from \"react-native\";\nimport { useContext } from 'react';\nimport { AuthContext } from '../auth-context';\nimport { account } from '../lib/app-write';\n\n// import local components here\n\nexport default function Settings(props) {\n    const { setIsLoggedIn } = useContext(AuthContext);\n\n    const handleLogout = async () => {\n        try{\n            await account.deleteSession('current');\n            setIsLoggedIn(false)\n        } catch (err) {\n            console.log(err)\n        }\n    }\n\n    return (\n        <View style={StyleSheet.screenContainer}>\n            <Pressable \n                onPress={handleLogout}\n                style={StyleSheet.loginSubmit}>\n                <Text style={StyleSheet.loginSubmitText}>\n                    Log Out\n                </Text>\n            </Pressable>\n        </View>\n    );\n}","import StyleSheet from '../styles/global-stylesheet'\nimport * as React from \"react\";\nimport { View, Text, Image, Pressable } from \"react-native\";\n\n// import local components here\n\nexport default function Calendar(props) {\n  return (\n    <View \n      style={StyleSheet.screenContainer}>\n      \n    </View>\n  );\n}","import StyleSheet from '../styles/global-stylesheet'\nimport * as React from \"react\";\nimport { View, Text, Image, Pressable, TextInput, } from \"react-native\";\nimport { useState, useContext} from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport { AuthContext } from '../auth-context';\nimport { account } from '../lib/app-write'\n\n// import local components here\n\nexport default function LoginScreen() {\n    const navigation = useNavigation();\n    const { setIsLoggedIn } = useContext(AuthContext);\n\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    const handleLogin = async () => {\n        try {\n            await account.createEmailPasswordSession(\n                email,\n                password,\n            );\n            setIsLoggedIn(true);\n        } catch (err) {\n            alert('Login failed!' + err.message);\n        }\n    };\n\n    return (\n        <View style={StyleSheet.screenContainer}>\n            <Text style={StyleSheet.loginTitle}>Welcome Back!</Text>\n\n            <TextInput\n                style={StyleSheet.loginUsername}\n                placeholder='email'\n                placeholderTextColor=\"#888\"\n                value={email}\n                onChangeText={setEmail}\n                autoCapitalize=\"none\"\n            />\n            <TextInput\n                style={StyleSheet.loginPassword}\n                placeholder='password'\n                placeholderTextColor=\"#888\"\n                secureTextEntry\n                value={password}\n                onChangeText={setPassword}\n                autoCapitalize=\"none\"\n            />\n\n            <Pressable style={StyleSheet.loginSubmit} onPress={handleLogin}>\n                <Text style={StyleSheet.loginSubmitText}>Login</Text>\n            </Pressable>\n\n            <Pressable onPress={() => navigation.navigate('SignUp')}>\n                <Text style={StyleSheet.footerText}>Sign up instead</Text>\n            </Pressable>\n            <Text style={StyleSheet.footerText}>Forgot your password?</Text>\n        </View>\n    );\n}","import StyleSheet from '../styles/global-stylesheet';\nimport * as React from \"react\";\nimport { View, Text, Pressable, TextInput, Alert } from 'react-native';\nimport { useState, useEffect, useContext } from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport { account, ID } from '../lib/app-write';\nimport { AuthContext } from '../auth-context';\n\nexport default function SignUpScreen() {\n    const navigation = useNavigation();\n\n    const [email, setEmail] = useState('');\n    const [name, setName] = useState('');\n    const [password, setPassword] = useState('');\n\n    const [emailError, setEmailError] = useState('');\n    const [nameError, setNameError] = useState('');\n    const [passwordError, setPasswordError] = useState('');\n\n    const [validEmail, setValidEmail] = useState(false);\n    const [validName, setValidName] = useState(false);\n    const [validPassword, setValidPassword] = useState(false);\n\n    const [validLogin, setValidLogin] = useState(false);\n\n    const { setIsLoggedIn } = useContext(AuthContext);\n\n    useEffect(() => {\n        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n        const isEmailValid = emailRegex.test(email);\n        if (email === '') {\n            setEmailError('');\n            setValidEmail(false);\n        } else if (isEmailValid) {\n            setEmailError('');\n            setValidEmail(true);\n        } else {\n            setEmailError('Please enter a valid email address.');\n            setValidEmail(false);\n        }\n    }, [email]);\n\n    useEffect(() => {\n        const passwordRegex = /^(?=.*[0-9])(?=.*[!@#$%^&*]).{8,}$/;\n        const isValidPassword = passwordRegex.test(password);\n        if (password === '') {\n            setPasswordError('');\n            setValidPassword(false);\n        } else if (isValidPassword) {\n            setPasswordError('');\n            setValidPassword(true);\n        } else {\n            setPasswordError('Password must be at least 8 characters, include a number and a special character.');\n            setValidPassword(false);\n        }\n    }, [password]);\n\n    useEffect(() => {\n        if (name.trim() === '') {\n            setNameError('Name cannot be empty.');\n        } else {\n            setNameError('');\n        }\n    }, [name]);\n\n    useEffect(() => {\n        const isEverythingValid = validEmail && validPassword && name.trim() !== '';\n        setValidLogin(isEverythingValid);\n    }, [validEmail, validPassword]);\n\n    const handleSignUp = async () => {\n        if (validLogin) {\n            try {\n                await account.create(ID.unique(), email, password, name);\n                await account.createEmailSession(email, password);\n                Alert.alert(\"Success\", \"Account created!\");\n                setIsLoggedIn(true);\n            } catch (error) {\n                if (error.code === 409) {\n                    // 👇 If account already exists, try logging in instead:\n                    try {\n                        await account.createEmailSession(email, password);\n                        Alert.alert(\"Welcome back!\");\n                        setIsLoggedIn(true);\n                    } catch (loginError) {\n                        Alert.alert(\n                            \"Email already in use\",\n                            \"That email is already registered. Please check your password or go to the login screen.\"\n                        );\n                    }\n                } else {\n                    Alert.alert(\"Error\", error.message || \"Something went wrong.\");\n                }\n            }\n        } else {\n            Alert.alert(\"Invalid\", \"Please fix the form before signing up.\");\n        }\n    };\n\n    return (\n        <View style={StyleSheet.screenContainer}>\n            <Pressable\n                onPress={() => navigation.navigate('Login')}\n                style={StyleSheet.backTextPress}>\n                <Text style={StyleSheet.backText}> ← Go back to login</Text>\n            </Pressable>\n            <Text style={StyleSheet.loginTitle}>Welcome!</Text>\n\n            <TextInput\n                style={StyleSheet.loginUsername}\n                placeholder='email'\n                placeholderTextColor=\"#888\"\n                value={email}\n                onChangeText={setEmail}\n                autoCapitalize=\"none\"\n            />\n            {emailError ? <Text style={StyleSheet.wrongSignUpInfo}>{emailError}</Text> : null}\n\n            <TextInput\n                style={StyleSheet.loginUsername}\n                placeholder='name'\n                placeholderTextColor=\"#888\"\n                value={name}\n                onChangeText={setName}\n                autoCapitalize=\"none\"\n            />\n            {nameError ? <Text style={StyleSheet.wrongSignUpInfo}>{nameError}</Text> : null}\n\n            <TextInput\n                style={StyleSheet.loginPassword}\n                placeholder='password'\n                placeholderTextColor=\"#888\"\n                secureTextEntry\n                value={password}\n                onChangeText={setPassword}\n                autoCapitalize=\"none\"\n            />\n            {passwordError ? <Text style={StyleSheet.wrongSignUpInfo}>{passwordError}</Text> : null}\n\n            <Pressable style={[\n                StyleSheet.loginSubmit, { backgroundColor: validLogin ? '#4C5C3A' : '#8DB580' }]}\n                onPress={handleSignUp}>\n                <Text style={StyleSheet.loginSubmitText}>Sign up</Text>\n            </Pressable>\n        </View >\n    );\n}","import StyleSheet from '../styles/global-stylesheet'\nimport * as React from \"react\";\nimport { View, Text, Image, Pressable } from \"react-native\";\n\n// import local components here\n\nexport default function CustomHeader({ title }) {\n  return (\n    <View style={StyleSheet.customHeader}>\n       <Text style={StyleSheet.customHeaderTitle}>{title}</Text>\n    </View>\n  );\n}","import { StatusBar } from 'expo-status-bar';\nimport { Text, View, Dimensions} from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { AuthProvider, AuthContext } from './auth-context';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { Ionicons } from '@expo/vector-icons';\nimport { useEffect, useState, useContext } from 'react';\n\n//import local components here\nimport Dashboard from './screens/dashboard';\nimport MyPlants from './screens/my-plants';\nimport Settings from './screens/settings';\nimport Calendar from './screens/calendar';\nimport LoginScreen from './login/login-screen';\nimport SignUpScreen from './login/sign-up-screen';\n\nimport { account, client } from './lib/app-write'\n\nimport CustomHeader from './components/custom-header';\n\nimport theme from './styles/theme';\nimport GlobalStyles from './styles/global-stylesheet';\n\nconst Stack = createNativeStackNavigator();\nconst Tab = createBottomTabNavigator();\n\nfunction MainTabs() {\n    const screenWidth = Dimensions.get('window').width;\n    const isPhoneSize = screenWidth < 600;\n  return (\n    <Tab.Navigator\n      screenOptions={({ route }) => ({\n        tabBarStyle: {\n          height: 60,\n        },\n        tabBarIcon: ({ focused, color, size }) => {\n          let iconName;\n\n          if (route.name === 'Dashboard') {\n            iconName = focused ? 'speedometer' : 'speedometer-outline';\n          } else if (route.name === 'MyPlants') {\n            iconName = focused ? 'leaf' : 'leaf-outline';\n          } else if (route.name === 'Settings') {\n            iconName = focused ? 'settings' : 'settings-outline';\n          } else if (route.name === 'Calendar') {\n            iconName = focused ? 'calendar' : 'calendar-outline';\n          }\n\n          return <Ionicons name={iconName} size={size} color={color} />;\n        },\n        tabBarLabelStyle: {\n          fontSize: isPhoneSize ? 14 : 20,\n        },\n        tabBarPressColor: 'transparent',\n        tabBarActiveTintColor: theme.colors.secondary,\n        tabBarInactiveTintColor: theme.colors.primary,\n      })}>\n      <Tab.Screen name=\"Dashboard\" component={Dashboard} options={{ headerShown: false }} />\n      <Tab.Screen name=\"MyPlants\" component={MyPlants} options={{ tabBarLabel: 'My Plants', header: () => <CustomHeader title=\"My Plants\" /> }} />\n      <Tab.Screen name=\"Calendar\" component={Calendar} options={{ header: () => <CustomHeader title=\"Calendar\" /> }} />\n      <Tab.Screen name=\"Settings\" component={Settings} options={{ header: () => <CustomHeader title=\"Settings\" /> }} />\n\n    </Tab.Navigator>\n  )\n}\n\nfunction AuthStack() {\n  return (\n    <Stack.Navigator>\n      <Stack.Screen name=\"Login\" component={LoginScreen} options={{ headerShown: false }} />\n      <Stack.Screen name=\"SignUp\" component={SignUpScreen} options={{ headerShown: false }} />\n    </Stack.Navigator>\n  )\n}\n\n\nfunction RootNavigator() {\n  const { isLoggedIn } = useContext(AuthContext);\n\n  if (isLoggedIn == null) {\n    return null;\n  }\n\n  return isLoggedIn ? (<MainTabs />) : (<AuthStack />);\n}\n\nexport default function App() {\n  return (\n    <AuthProvider>\n      <NavigationContainer>\n        <RootNavigator />\n      </NavigationContainer>\n    </AuthProvider>\n  );\n}\n\n","import { registerRootComponent } from 'expo';\n\nimport App from './App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in Expo Go or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/PlantApp/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [386], () => (__webpack_require__(3205)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["client","Client","setEndpoint","setProject","database","Databases","account","Account","AuthContext","createContext","AuthProvider","children","isLoggedIn","setIsLoggedIn","useState","useEffect","async","get","error","console","log","checkLoggedIn","_jsx","Provider","value","colors","primary","secondary","background","accent","copperBrown","dustyRose","yellow","text","isPhoneSize","Dimensions","width","StyleSheet","create","screenContainer","flex","margin","alignItems","justifyContent","backgroundColor","theme","tabBarStyle","height","borderTopWidth","borderTopColor","customHeader","paddingTop","paddingHorizontal","flexDirection","fontSize","customHeaderTitle","color","fontWeight","myPlants","plantCard","marginBottom","marginLeft","borderRadius","padding","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","plantCardName","plantCardType","plantCardWatering","plantCardSunlight","plantCardNotes","loginTitle","textAlign","loginUsername","borderWidth","borderColor","loginPassword","loginSubmit","paddingVertical","loginSubmitText","footerText","marginTop","backText","backTextPress","position","top","left","wrongSignUpInfo","Dashboard","navigation","View","style","PlantCard","plant","onDelete","_jsxs","Text","name","type","wateringText","wt","wateringFrequency","sunEmoji","sunlight","notes","Pressable","onPress","$id","MyPlants","plants","setPlants","React","loading","setLoading","modalVisible","setModalVisible","fetchPlants","user","response","listDocuments","Query","equal","documents","newPlant","setNewPlant","handleDeletePlant","deleteDocument","id","err","styles","_Fragment","FlatList","data","keyExtractor","renderItem","item","Button","title","Modal","visible","animationType","transparent","onRequestClose","TextInput","placeholder","onChangeText","Object","assign","keyboardType","trim","isNaN","created","createDocument","ID","unique","parseInt","userId","prev","alert","Settings","props","useContext","deleteSession","Calendar","LoginScreen","useNavigation","email","setEmail","password","setPassword","placeholderTextColor","autoCapitalize","secureTextEntry","createEmailPasswordSession","message","navigate","SignUpScreen","setName","emailError","setEmailError","nameError","setNameError","passwordError","setPasswordError","validEmail","setValidEmail","validName","setValidName","validPassword","setValidPassword","validLogin","setValidLogin","isEmailValid","test","isValidPassword","isEverythingValid","createEmailSession","Alert","code","loginError","CustomHeader","Stack","createNativeStackNavigator","Tab","createBottomTabNavigator","MainTabs","Navigator","screenOptions","route","tabBarIcon","focused","size","iconName","Ionicons","tabBarLabelStyle","tabBarPressColor","tabBarActiveTintColor","tabBarInactiveTintColor","Screen","component","options","headerShown","tabBarLabel","header","AuthStack","RootNavigator","registerRootComponent","NavigationContainer","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","length","fulfilled","j","keys","every","key","splice","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","g","globalThis","this","Function","e","window","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","forEach","bind","push","__webpack_exports__"],"sourceRoot":""}