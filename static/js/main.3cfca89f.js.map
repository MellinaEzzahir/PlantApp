{"version":3,"file":"static/js/main.3cfca89f.js","mappings":"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","sources":["lib/app-write.js","styles/theme.js","auth-context.js","styles/global-stylesheet.js","screens/dashboard.js","components/plant-card.js","screens/my-plants.js","screens/settings.js","screens/calendar.js","login/login-screen.js","login/sign-up-screen.js","components/custom-header.js","App.js","index.js","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import { Client, Account, ID, Databases } from 'appwrite';\n\nconst client = new Client()\n    .setEndpoint('https://fra.cloud.appwrite.io/v1')\n    .setProject('plantapp')\n\nconst database = new Databases(client);\nconst account = new Account(client)\nexport { ID, client, database, account };","export const lightTheme = {\n    colors: {\n        primary: '#8DB580',\n        secondary: '#4C5C3A',\n        background: '#F6F4EF',\n        accent: '#E57373',\n        copperBrown: '#B87333',\n        dustyRose: '#C48793',\n        yellow: '#FCE38A',\n        text: '#333333',\n        error: 'rgb(190, 75, 64)',\n        copperBrownShadow: 'rgba(184, 115, 51, 0.2)',\n    }\n}\n\nexport const darkTheme = {\n  colors: {\n    primary: 'rgb(80, 107, 70)',  \n    secondary: 'rgb(54, 66, 41)',   \n    background: 'rgb(26, 26, 24)',     \n    accent: 'rgb(183, 66, 66)',       \n    copperBrown: 'rgb(139, 80, 36)',      \n    dustyRose: 'rgb(133, 79, 91)',     \n    yellow: 'rgb(204, 179, 50)',    \n    text: 'rgb(240, 240, 235)',       \n    error: 'rgb(190, 75, 64)',        \n    copperBrownShadow: 'rgba(139, 80, 36, 0.25)', \n  }\n};\n","import React, { createContext, useState, useEffect } from 'react'\nimport { account } from './lib/app-write'\nimport { lightTheme, darkTheme } from './styles/theme';\n\nexport const AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n    const [isLoggedIn, setIsLoggedIn] = useState(null);\n    const [isDarkMode, setIsDarkMode] = useState(false);\n\n    useEffect(() => {\n        const checkLoggedIn = async () => {\n            try {\n                const user = await account.get();\n                setIsLoggedIn(true)\n            } catch (error) {\n                console.log('User is not logged in:' + error)\n                setIsLoggedIn(false);\n            }\n        }\n        checkLoggedIn();\n    }, []);\n\n    const toggleTheme = () => setIsDarkMode(prev => !prev);\n    const theme = isDarkMode ? darkTheme : lightTheme;\n\n    return (\n        <AuthContext.Provider value={{\n            isLoggedIn,\n            setIsLoggedIn,\n            isDarkMode,\n            toggleTheme,\n            theme,\n        }}>\n            {children}\n        </AuthContext.Provider>\n    );\n}","import { StyleSheet, Dimensions } from 'react-native';\nimport { useContext } from 'react';\n\nconst screenWidth = Dimensions.get('window').width;\nconst isPhoneSize = screenWidth < 600;\n\nexport const createStyles = (theme) => StyleSheet.create({\n    screenContainer: {\n        flex: 1,\n        margin: 40,\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: theme.colors.background,\n    },\n\n    tabBarStyle: {\n        backgroundColor: '#fff',\n        height: 60,\n        borderTopWidth: 2,\n        borderTopColor: 'lightgray',\n    },\n\n    customHeader: {\n        height: 70,\n        paddingTop: 25,\n        paddingHorizontal: 15,\n        backgroundColor: theme.colors.secondary,\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        fontSize: 26,\n    },\n\n    customHeaderTitle: {\n        fontSize: 24,\n        color: 'white',\n        fontWeight: 'bold',\n    },\n\n    myPlants: {\n        width: '100%',\n    },\n\n    plantCard: {\n        width: '95%',\n        marginBottom: 12,\n        marginLeft: 10,\n        backgroundColor: theme.colors.primary,\n        borderRadius: 16,\n        padding: 16,\n        boxShadow: '0px 2px 4px rgba(0, 0, 0, 0.1)',\n        elevation: 2,\n    },\n\n    plantCardName: {\n        fontSize: 18,\n        color: 'white',\n        fontWeight: 'bold',\n    },\n\n    plantCardType: {\n        fontSize: 14,\n        marginBottom: 4,\n    },\n\n    plantCardWatering: {},\n    plantCardSunlight: {},\n    plantCardNotes: {},\n\n    loginTitle: {\n        fontSize: 26,\n        fontWeight: 'bold',\n        marginBottom: 24,\n        color: theme.colors.secondary,\n        textAlign: 'center',\n    },\n\n    loginUsername: {\n        width: isPhoneSize ? '100%' : 500,\n        padding: 14,\n        marginBottom: 16,\n        borderRadius: 16,\n        borderWidth: 1.5,\n        borderColor: theme.colors.primary,\n        backgroundColor: '#fff',\n        fontSize: 16,\n        color: theme.colors.text,\n        boxShadow: '0px 1px 2px rgba(0, 0, 0, 0.05)',\n        elevation: 1,\n    },\n\n    loginPassword: {\n        width: isPhoneSize ? '100%' : 500,\n        padding: 14,\n        marginBottom: 24,\n        borderRadius: 16,\n        borderWidth: 1.5,\n        borderColor: theme.colors.primary,\n        backgroundColor: '#fff',\n        fontSize: 16,\n        color: theme.colors.text,\n        boxShadow: '0px 1px 2px rgba(0, 0, 0, 0.05)',\n        elevation: 1,\n    },\n\n    loginSubmit: {\n        backgroundColor: theme.colors.secondary,\n        paddingVertical: 14,\n        paddingHorizontal: 32,\n        borderRadius: 16,\n        boxShadow: '0px 3px 4px theme.colors.copperBrownShadow',\n        elevation: 4,\n        marginBottom: 16,\n    },\n\n    loginSubmitText: {\n        color: '#fff',\n        fontSize: 16,\n        fontWeight: 'bold',\n        textAlign: 'center',\n    },\n\n    footerText: {\n        marginTop: 12,\n        fontSize: 14,\n        color: theme.colors.secondary,\n        textAlign: 'center',\n    },\n\n    backText: {\n        marginTop: 12,\n        fontSize: 14,\n        color: theme.colors.secondary,\n        textAlign: 'center',\n    },\n\n    backTextPress: {\n        position: 'absolute',\n        top: 10,\n        left: 10,\n    },\n\n    wrongSignUpInfo: {\n        color: '#d9534f',\n        marginBottom: 12,\n        marginLeft: 4,\n        fontSize: 14,\n    },\n\n    demoAccountLoginLink: {\n        marginTop: 12,\n        marginBottom: 12,\n        fontSize: 15,\n        color: theme.colors.secondary,\n        textAlign: 'center',\n    }\n});","import { View } from \"react-native\";\nimport { useContext } from \"react\";\nimport { AuthContext } from \"../auth-context\";\nimport { createStyles } from \"../styles/global-stylesheet\";\n\nexport default function Dashboard({ navigation }) {\n  const { theme } = useContext(AuthContext);\n  const StyleSheet = createStyles(theme);\n\n  return (\n    <View\n      style={StyleSheet.screenContainer}>\n    </View>\n  );\n}","import { View, Text, Pressable } from \"react-native\";\nimport { useContext } from \"react\";\nimport { AuthContext } from \"../auth-context\";\nimport { createStyles } from \"../styles/global-stylesheet\";\n\nexport default function PlantCard({ plant, onDelete, onEdit }) {\n    const { theme } = useContext(AuthContext);\n    const StyleSheet = createStyles(theme);\n    const sunEmoji = () => {\n        switch (plant.sunlight) {\n            case 1: return \"☀️☁️☁️☁️☁️\";\n            case 2: return \"☀️☀️☁️☁️☁️\";\n            case 3: return \"☀️☀️☀️☁️☁️\";\n            case 4: return \"☀️☀️☀️☀️☁️\";\n            case 5: return \"☀️☀️☀️☀️☀️\";\n            default: return \"idk think theres an error somewhere\";\n        }\n    };\n\n    const wateringText = () => {\n        const wt = plant.wateringFrequency;\n        if (wt % 7 === 0) {\n            return wt === 7 ? \"Water weekly\" : `Water every ${wt / 7} weeks`;\n        } else {\n            return wt === 1 ? \"Water daily\" : `Water every ${wt} days`;\n        }\n    };\n\n    return (\n        <View style={StyleSheet.plantCard}>\n            <Text style={StyleSheet.plantCardName}>{plant.name}</Text>\n            <Text style={StyleSheet.plantCardType}>{plant.type}</Text>\n            <Text style={StyleSheet.plantCardWatering}>{wateringText()}</Text>\n            <Text style={StyleSheet.plantCardSunlight}>{sunEmoji()}</Text>\n            <Text style={StyleSheet.plantCardNotes}>{plant.notes}</Text>\n            <Pressable onPress={() => onDelete(plant.$id)}>\n                <Text>Delete</Text>\n            </Pressable>\n            <Pressable onPress={() => onEdit(plant.$id,  )}>\n                <Text>Edit</Text>\n            </Pressable>\n        </View>\n    );\n}","import * as React from \"react\";\nimport { View, Text, TextInput, Button, FlatList, Modal, TouchableOpacity } from \"react-native\";\nimport { database, account } from '../lib/app-write';\nimport { ID, Query } from 'appwrite';\nimport PlantCard from \"../components/plant-card\";\nimport { useContext } from \"react\";\nimport { AuthContext } from \"../auth-context\";\nimport { createStyles } from \"../styles/global-stylesheet\";\n\nexport default function MyPlants() {\n    const [plants, setPlants] = React.useState([]);\n    const [loading, setLoading] = React.useState(true);\n    const [modalVisible, setModalVisible] = React.useState(false);\n\n    const { theme } = useContext(AuthContext);\n    const StyleSheet = createStyles(theme);\n\n    React.useEffect(() => {\n        fetchPlants();\n    }, []);\n\n    const fetchPlants = async () => {\n        try {\n            const user = await account.get();\n\n            const response = await database.listDocuments(\n                'database',\n                'plants',\n                [Query.equal('userId', user.$id)]\n            );\n            setPlants(response.documents);\n        } catch (error) {\n            console.error(\"Error fetching plants:\", error);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const [newPlant, setNewPlant] = React.useState({\n        name: '',\n        type: '',\n        wateringFrequency: '',\n        sunlight: '',\n        notes: '',\n    });\n\n    const handleAddPlant = async () => {\n        if (\n            !newPlant.name.trim() ||\n            !newPlant.type.trim() ||\n            isNaN(newPlant.wateringFrequency) ||\n            isNaN(newPlant.sunlight)\n        ) {\n            alert(\"Please fill out all required fields correctly.\");\n            return;\n        }\n\n        try {\n            const user = await account.get();\n\n            const created = await database.createDocument(\n                'database',\n                'plants',\n                ID.unique(),\n                {\n                    name: newPlant.name.trim(),\n                    type: newPlant.type.trim(),\n                    wateringFrequency: parseInt(newPlant.wateringFrequency),\n                    sunlight: parseInt(newPlant.sunlight),\n                    notes: newPlant.notes.trim(),\n                    userId: user.$id,\n                }\n            );\n\n            setPlants(prev => [created, ...prev]);\n            setNewPlant({ name: '', type: '', wateringFrequency: '', sunlight: '', notes: '' });\n            setModalVisible(false);\n        } catch (err) {\n            console.error(\"Failed to create plant\", err);\n        }\n    };\n\n    const handleDeletePlant = async (id, newPlant) => {\n        try {\n            const result = await database.deleteDocument(\"database\", \"plants\", id)\n            fetchPlants();\n        } catch (err) {\n            console.log(err)\n        }\n    }\n\n    const handleEditPlant = async (id) => {\n        try{\n            const result = await database.updateDocument(\"da\")\n            fetchPlants\n        }catch (err){\n            console.log(err)\n        }\n    }\n\n    return (\n        <View style={StyleSheet.screenContainer}>\n            <Text style={StyleSheet.loginTitle}>My Plants</Text>\n\n            {loading ? (\n                <Text>Loading...</Text>\n            ) : (\n                <>\n                    <FlatList\n                        data={plants}\n                        keyExtractor={(plant) => plant.$id}\n                        renderItem={({ item }) =>\n                            <PlantCard\n                                plant={item}\n                                onDelete={handleDeletePlant}\n                                onEdit={handleEditPlant}\n                            />}\n                        style={StyleSheet.myPlants}\n                    />\n\n                    <View style={{ width: '95%', marginBottom: 16 }}>\n                        <Button\n                            title=\"Add a Plant\"\n                            onPress={() => setModalVisible(true)}\n                            color={StyleSheet.customHeader.backgroundColor} // keeps the button colour consistent with header\n                        />\n                    </View>\n\n                    <Modal\n                        visible={modalVisible}\n                        animationType=\"slide\"\n                        transparent={true}\n                        onRequestClose={() => setModalVisible(false)}\n                    >\n                        <View style={{\n                            flex: 1,\n                            justifyContent: 'center',\n                            backgroundColor: 'rgba(0,0,0,0.5)',\n                            padding: 20,\n                        }}>\n                            <View style={[StyleSheet.plantCard, { backgroundColor: 'white' }]}>\n                                <Text style={{ fontSize: 20, marginBottom: 10, fontWeight: 'bold', color: StyleSheet.customHeader.backgroundColor }}>\n                                    Add a Plant\n                                </Text>\n\n                                <TextInput\n                                    placeholder=\"Plant Name *\"\n                                    value={newPlant.name}\n                                    onChangeText={(text) => setNewPlant({ ...newPlant, name: text })}\n                                    style={StyleSheet.loginUsername}\n                                />\n                                <TextInput\n                                    placeholder=\"Type (e.g., indoor, outdoor) *\"\n                                    value={newPlant.type}\n                                    onChangeText={(text) => setNewPlant({ ...newPlant, type: text })}\n                                    style={StyleSheet.loginUsername}\n                                />\n                                <TextInput\n                                    placeholder=\"Watering Frequency (days) *\"\n                                    value={newPlant.wateringFrequency}\n                                    onChangeText={(text) => setNewPlant({ ...newPlant, wateringFrequency: text })}\n                                    keyboardType=\"numeric\"\n                                    style={StyleSheet.loginUsername}\n                                />\n                                <TextInput\n                                    placeholder=\"Sunlight (1-5) *\"\n                                    value={newPlant.sunlight}\n                                    onChangeText={(text) => setNewPlant({ ...newPlant, sunlight: text })}\n                                    keyboardType=\"numeric\"\n                                    style={StyleSheet.loginUsername}\n                                />\n                                <TextInput\n                                    placeholder=\"Notes (optional)\"\n                                    value={newPlant.notes}\n                                    onChangeText={(text) => setNewPlant({ ...newPlant, notes: text })}\n                                    style={StyleSheet.loginUsername}\n                                />\n\n                                <View style={{ flexDirection: 'row', justifyContent: 'space-between' }}>\n                                    <Button title=\"Cancel\" onPress={() => setModalVisible(false)} color=\"#888\" />\n                                    <Button title=\"Add Plant\" onPress={handleAddPlant} color={StyleSheet.customHeader.backgroundColor} />\n                                </View>\n                            </View>\n                        </View>\n                    </Modal>\n                </>\n            )}\n        </View>\n    );\n}","import { useState } from 'react';\nimport { View, Text, Pressable, Switch } from \"react-native\";\nimport { useContext } from 'react';\nimport { AuthContext } from '../auth-context';\nimport { account } from '../lib/app-write';\nimport { createStyles } from \"../styles/global-stylesheet\";\n\n// import local components here\n\nexport default function Settings(props) {\n    const { setIsLoggedIn } = useContext(AuthContext);\n    const { isDarkMode, toggleTheme, theme } = useContext(AuthContext);\n    const StyleSheet = createStyles(theme);\n\n    const handleLogout = async () => {\n        try {\n            await account.deleteSession('current');\n            setIsLoggedIn(false)\n        } catch (err) {\n            console.log(err)\n        }\n    }\n\n    return (\n        <View style={StyleSheet.screenContainer}>\n            <Pressable\n                onPress={handleLogout}\n                style={StyleSheet.loginSubmit}>\n                <Text style={StyleSheet.loginSubmitText}>\n                    Log Out\n                </Text>\n            </Pressable>\n            <Text>Dark Mode</Text>\n            <Switch\n                trackColor={{\n                    false: theme.colors.primary, // neutral grey fallback since no border color was defined\n                    true: theme.colors.primary\n                }}\n                thumbColor={isDarkMode ? theme.colors.secondary : theme.colors.secondary}\n                value={isDarkMode}\n                onValueChange={toggleTheme}\n            />\n        </View>\n    );\n}","import { useContext } from \"react\";\nimport { AuthContext } from \"../auth-context\";\nimport { createStyles } from \"../styles/global-stylesheet\";\nimport * as React from \"react\";\nimport { View, Text, Image, Pressable } from \"react-native\";\n\n// import local components here\n\nexport default function Calendar(props) {\n  const { theme } = useContext(AuthContext);\n    const StyleSheet = createStyles(theme);\n  return (\n    <View \n      style={StyleSheet.screenContainer}>\n      \n    </View>\n  );\n}","import { createStyles } from \"../styles/global-stylesheet\";\nimport * as React from \"react\";\nimport { View, Text, Image, Pressable, TextInput, } from \"react-native\";\nimport { useState, useContext } from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport { AuthContext } from '../auth-context';\nimport { account } from '../lib/app-write'\n\n// import local components here\n\nexport default function LoginScreen() {\n    const { theme } = useContext(AuthContext);\n    const StyleSheet = createStyles(theme);\n    const navigation = useNavigation();\n    const { setIsLoggedIn } = useContext(AuthContext);\n\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    const handleLogin = async () => {\n        try {\n            await account.createEmailPasswordSession(\n                email,\n                password,\n            );\n            setIsLoggedIn(true);\n        } catch (err) {\n            alert('Login failed! ' + err.message);\n        }\n    };\n\n    const handleDemoLogin = async () => {\n        try {\n            await account.createEmailPasswordSession(\n                'demo@demo.com',\n                'demodemo'\n            );\n            setIsLoggedIn(true);\n        } catch (err) {\n            alert('Login failed! ' + err.message);\n        }\n    };\n\n    return (\n        <View style={StyleSheet.screenContainer}>\n            <Text style={StyleSheet.loginTitle}>Welcome Back!</Text>\n            <Pressable onPress={handleDemoLogin}>\n                <Text style={StyleSheet.demoAccountLoginLink}>Use a demo account</Text>\n            </Pressable>\n\n            <TextInput\n                style={StyleSheet.loginUsername}\n                placeholder='email'\n                placeholderTextColor=\"#888\"\n                value={email}\n                onChangeText={setEmail}\n                autoCapitalize=\"none\"\n            />\n            <TextInput\n                style={StyleSheet.loginPassword}\n                placeholder='password'\n                placeholderTextColor=\"#888\"\n                secureTextEntry\n                value={password}\n                onChangeText={setPassword}\n                autoCapitalize=\"none\"\n            />\n\n            <Pressable style={StyleSheet.loginSubmit} onPress={handleLogin}>\n                <Text style={StyleSheet.loginSubmitText}>Login</Text>\n            </Pressable>\n\n            <Pressable onPress={() => navigation.navigate('SignUp')}>\n                <Text style={StyleSheet.footerText}>Sign up instead</Text>\n            </Pressable>\n            <Text style={StyleSheet.footerText}>Forgot your password?</Text>\n        </View>\n    );\n}","import { createStyles } from \"../styles/global-stylesheet\";\nimport * as React from \"react\";\nimport { View, Text, Pressable, TextInput, Alert } from 'react-native';\nimport { useState, useEffect, useContext } from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport { account, ID } from '../lib/app-write';\nimport { AuthContext } from '../auth-context';\n\nexport default function SignUpScreen() {\n    const { theme } = useContext(AuthContext);\n    const StyleSheet = createStyles(theme);\n\n    const navigation = useNavigation();\n\n    const [email, setEmail] = useState('');\n    const [name, setName] = useState('');\n    const [password, setPassword] = useState('');\n\n    const [emailError, setEmailError] = useState('');\n    const [nameError, setNameError] = useState('');\n    const [passwordError, setPasswordError] = useState('');\n\n    const [validEmail, setValidEmail] = useState(false);\n    const [validName, setValidName] = useState(false);\n    const [validPassword, setValidPassword] = useState(false);\n\n    const [validLogin, setValidLogin] = useState(false);\n\n    const { setIsLoggedIn } = useContext(AuthContext);\n\n    useEffect(() => {\n        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n        const isEmailValid = emailRegex.test(email);\n        if (email === '') {\n            setEmailError('');\n            setValidEmail(false);\n        } else if (isEmailValid) {\n            setEmailError('');\n            setValidEmail(true);\n        } else {\n            setEmailError('Please enter a valid email address.');\n            setValidEmail(false);\n        }\n    }, [email]);\n\n    useEffect(() => {\n        const passwordRegex = /^(?=.*[0-9])(?=.*[!@#$%^&*]).{8,}$/;\n        const isValidPassword = passwordRegex.test(password);\n        if (password === '') {\n            setPasswordError('');\n            setValidPassword(false);\n        } else if (isValidPassword) {\n            setPasswordError('');\n            setValidPassword(true);\n        } else {\n            setPasswordError('Password must be at least 8 characters, include a number and a special character.');\n            setValidPassword(false);\n        }\n    }, [password]);\n\n    useEffect(() => {\n        if ((password !== '' || email !== '') && name === '') {\n            setNameError('Name cannot be empty');\n            setValidName(false);\n        } else {\n            setNameError('');\n            setValidName(true);\n        }\n    }, [password, email, name]);\n\n    useEffect(() => {\n        const isEverythingValid = validEmail && validPassword && name.trim() !== '';\n        setValidLogin(isEverythingValid);\n    }, [validEmail, validPassword]);\n\n    const handleSignUp = async () => {\n        if (validLogin) {\n            try {\n                await account.create(ID.unique(), email, password, name);\n                await account.createEmailSession(email, password);\n                Alert.alert(\"Success\", \"Account created!\");\n                setIsLoggedIn(true);\n            } catch (error) {\n                if (error.code === 409) {\n                    try {\n                        await account.createEmailSession(email, password);\n                        Alert.alert(\"Welcome back!\");\n                        setIsLoggedIn(true);\n                    } catch (loginError) {\n                        Alert.alert(\n                            \"Email already in use\",\n                            \"That email is already registered. Please check your password or go to the login screen.\"\n                        );\n                    }\n                } else {\n                    Alert.alert(\"Error\", error.message || \"Something went wrong.\");\n                }\n            }\n        } else {\n            Alert.alert(\"Invalid\", \"Please fix the form before signing up.\");\n        }\n    };\n\n    return (\n        <View style={StyleSheet.screenContainer}>\n            <Pressable\n                onPress={() => navigation.navigate('Login')}\n                style={StyleSheet.backTextPress}>\n                <Text style={StyleSheet.backText}> ← Go back to login</Text>\n            </Pressable>\n            <Text style={StyleSheet.loginTitle}>Welcome!</Text>\n\n            <TextInput\n                style={StyleSheet.loginUsername}\n                placeholder='email'\n                placeholderTextColor=\"#888\"\n                value={email}\n                onChangeText={setEmail}\n                autoCapitalize=\"none\"\n            />\n            {emailError ? <Text style={StyleSheet.wrongSignUpInfo}>{emailError}</Text> : null}\n\n            <TextInput\n                style={StyleSheet.loginUsername}\n                placeholder='name'\n                placeholderTextColor=\"#888\"\n                value={name}\n                onChangeText={setName}\n                autoCapitalize=\"none\"\n            />\n            {nameError ? <Text style={StyleSheet.wrongSignUpInfo}>{nameError}</Text> : null}\n\n            <TextInput\n                style={StyleSheet.loginPassword}\n                placeholder='password'\n                placeholderTextColor=\"#888\"\n                secureTextEntry\n                value={password}\n                onChangeText={setPassword}\n                autoCapitalize=\"none\"\n            />\n            {passwordError ? <Text style={StyleSheet.wrongSignUpInfo}>{passwordError}</Text> : null}\n\n            <Pressable style={[\n                StyleSheet.loginSubmit, { backgroundColor: validLogin ? '#4C5C3A' : '#8DB580' }]}\n                onPress={handleSignUp}>\n                <Text style={StyleSheet.loginSubmitText}>Sign up</Text>\n            </Pressable>\n        </View >\n    );\n}","import { View, Text} from \"react-native\";\nimport { useContext } from \"react\";\nimport { AuthContext } from \"../auth-context\";\nimport { createStyles } from \"../styles/global-stylesheet\";\n\n// import local components here\n\nexport default function CustomHeader({ title }) {\n  const { theme } = useContext(AuthContext);\n  const StyleSheet = createStyles(theme);\n  return (\n    <View style={StyleSheet.customHeader}>\n       <Text style={StyleSheet.customHeaderTitle}>{title}</Text>\n    </View>\n  );\n}","import { StatusBar } from 'expo-status-bar';\nimport { Text, View, Dimensions } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { AuthProvider, AuthContext } from './auth-context';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { Ionicons } from '@expo/vector-icons';\nimport { useEffect, useState, useContext } from 'react';\n\n//import local components here\nimport Dashboard from './screens/dashboard';\nimport MyPlants from './screens/my-plants';\nimport Settings from './screens/settings';\nimport Calendar from './screens/calendar';\nimport LoginScreen from './login/login-screen';\nimport SignUpScreen from './login/sign-up-screen';\n\n\nimport CustomHeader from './components/custom-header';\nimport { createStyles } from './styles/global-stylesheet';\n\n\nconst Stack = createNativeStackNavigator();\nconst Tab = createBottomTabNavigator();\n\nfunction MainTabs() {\n  const { theme } = useContext(AuthContext);\n  const StyleSheet = createStyles(theme);\n  const screenWidth = Dimensions.get('window').width;\n  const isPhoneSize = screenWidth < 600;\n  return (\n    <Tab.Navigator\n      screenOptions={({ route }) => ({\n        tabBarStyle: {\n          height: 60,\n        },\n        tabBarIcon: ({ focused, color, size }) => {\n          let iconName;\n\n          if (route.name === 'Dashboard') {\n            iconName = focused ? 'speedometer' : 'speedometer-outline';\n          } else if (route.name === 'MyPlants') {\n            iconName = focused ? 'leaf' : 'leaf-outline';\n          } else if (route.name === 'Settings') {\n            iconName = focused ? 'settings' : 'settings-outline';\n          } else if (route.name === 'Calendar') {\n            iconName = focused ? 'calendar' : 'calendar-outline';\n          }\n\n          return <Ionicons name={iconName} size={size} color={color} />;\n        },\n        tabBarLabelStyle: {\n          fontSize: isPhoneSize ? 14 : 20,\n        },\n        tabBarPressColor: 'transparent',\n        tabBarActiveTintColor: theme.colors.secondary,\n        tabBarInactiveTintColor: theme.colors.primary,\n      })}>\n      <Tab.Screen name=\"Dashboard\" component={Dashboard} options={{ headerShown: false }} />\n      <Tab.Screen name=\"MyPlants\" component={MyPlants} options={{ tabBarLabel: 'My Plants', header: () => <CustomHeader title=\"My Plants\" /> }} />\n      <Tab.Screen name=\"Calendar\" component={Calendar} options={{ header: () => <CustomHeader title=\"Calendar\" /> }} />\n      <Tab.Screen name=\"Settings\" component={Settings} options={{ header: () => <CustomHeader title=\"Settings\" /> }} />\n\n    </Tab.Navigator>\n  )\n}\n\nfunction AuthStack() {\n  return (\n    <Stack.Navigator>\n      <Stack.Screen name=\"Login\" component={LoginScreen} options={{ headerShown: false }} />\n      <Stack.Screen name=\"SignUp\" component={SignUpScreen} options={{ headerShown: false }} />\n    </Stack.Navigator>\n  )\n}\n\n\nfunction RootNavigator() {\n  const { isLoggedIn } = useContext(AuthContext);\n\n  if (isLoggedIn == null) {\n    return null;\n  }\n\n  return isLoggedIn ? (<MainTabs />) : (<AuthStack />);\n}\n\nexport default function App() {\n  return (\n    <AuthProvider>\n      <NavigationContainer>\n        <RootNavigator />\n      </NavigationContainer>\n    </AuthProvider>\n  );\n}\n\n","import { registerRootComponent } from 'expo';\n\nimport App from './App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in Expo Go or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/PlantApp/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [494], () => (__webpack_require__(3205)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["client","Client","setEndpoint","setProject","database","Databases","account","Account","lightTheme","colors","primary","secondary","background","accent","copperBrown","dustyRose","yellow","text","error","copperBrownShadow","darkTheme","AuthContext","createContext","AuthProvider","children","isLoggedIn","setIsLoggedIn","useState","isDarkMode","setIsDarkMode","useEffect","async","get","console","log","checkLoggedIn","theme","_jsx","Provider","value","toggleTheme","prev","isPhoneSize","Dimensions","width","createStyles","StyleSheet","create","screenContainer","flex","margin","alignItems","justifyContent","backgroundColor","tabBarStyle","height","borderTopWidth","borderTopColor","customHeader","paddingTop","paddingHorizontal","flexDirection","fontSize","customHeaderTitle","color","fontWeight","myPlants","plantCard","marginBottom","marginLeft","borderRadius","padding","boxShadow","elevation","plantCardName","plantCardType","plantCardWatering","plantCardSunlight","plantCardNotes","loginTitle","textAlign","loginUsername","borderWidth","borderColor","loginPassword","loginSubmit","paddingVertical","loginSubmitText","footerText","marginTop","backText","backTextPress","position","top","left","wrongSignUpInfo","demoAccountLoginLink","Dashboard","navigation","useContext","View","style","PlantCard","plant","onDelete","onEdit","_jsxs","Text","name","type","wateringText","wt","wateringFrequency","sunEmoji","sunlight","notes","Pressable","onPress","$id","MyPlants","plants","setPlants","React","loading","setLoading","modalVisible","setModalVisible","fetchPlants","user","response","listDocuments","Query","equal","documents","newPlant","setNewPlant","handleDeletePlant","id","deleteDocument","err","handleEditPlant","updateDocument","_Fragment","FlatList","data","keyExtractor","renderItem","item","Button","title","Modal","visible","animationType","transparent","onRequestClose","TextInput","placeholder","onChangeText","Object","assign","keyboardType","trim","isNaN","created","createDocument","ID","unique","parseInt","userId","alert","Settings","props","deleteSession","Switch","trackColor","false","true","thumbColor","onValueChange","Calendar","LoginScreen","useNavigation","email","setEmail","password","setPassword","createEmailPasswordSession","message","placeholderTextColor","autoCapitalize","secureTextEntry","navigate","SignUpScreen","setName","emailError","setEmailError","nameError","setNameError","passwordError","setPasswordError","validEmail","setValidEmail","validName","setValidName","validPassword","setValidPassword","validLogin","setValidLogin","isEmailValid","test","isValidPassword","isEverythingValid","createEmailSession","Alert","code","loginError","CustomHeader","Stack","createNativeStackNavigator","Tab","createBottomTabNavigator","MainTabs","Navigator","screenOptions","route","tabBarIcon","focused","size","iconName","Ionicons","tabBarLabelStyle","tabBarPressColor","tabBarActiveTintColor","tabBarInactiveTintColor","Screen","component","options","headerShown","tabBarLabel","header","AuthStack","RootNavigator","registerRootComponent","NavigationContainer","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","length","fulfilled","j","keys","every","key","splice","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","g","globalThis","this","Function","e","window","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","forEach","bind","push","__webpack_exports__"],"sourceRoot":""}